; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs =
  nodemcuv2
  d1_mini
  esp12
  esp07
  huzzah
  d1_mini_pro
  esp32doit-devkit-v1

[base]
framework = arduino
board_f_cpu = 160000000L
lib_deps_builtin =
lib_deps_external =
  nrf24/RF24 @ ~1.3.2
  ArduinoJson
  PubSubClient@~2.8
  https://github.com/ratkins/RGBConverter.git#07010f2
  WebSockets@~2.4
  CircularBuffer@~1.3
  PathVariableHandlers@~3.0
  RichHttpServer@~3.1
  StreamUtils@~1.7
  https://github.com/tzapu/WiFiManager.git#v2.0.16-rc.2
extra_scripts =
  pre:.build_web.py
test_ignore = remote
upload_speed = 460800
monitor_speed = 9600
build_flags =
  !python3 .get_version.py
  -D MQTT_MAX_PACKET_SIZE=360
  -D HTTP_UPLOAD_BUFLEN=128
  -D FIRMWARE_NAME=milight-hub
  -D RICH_HTTP_REQUEST_BUFFER_SIZE=2048
  -D RICH_HTTP_RESPONSE_BUFFER_SIZE=2048
  -D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48
  -I dist
  -Ilib/DataStructures
; -D DEBUG_PRINTF
; -D MQTT_DEBUG
; -D MILIGHT_UDP_DEBUG
; -D STATE_DEBUG

[esp8266]
extends = base
platform = espressif8266@~4
lib_deps =
  ${base.lib_deps_builtin}
  ${base.lib_deps_external}

[esp32]
extends = base
platform = espressif32
lib_deps =
  ${base.lib_deps_builtin}
  ${base.lib_deps_external}
  luc-github/ESP32SSDP@^1.2.1

[env:nodemcuv2]
extends = esp8266
board = nodemcuv2
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=nodemcuv2

[env:d1_mini]
extends = esp8266
board = d1_mini
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=d1_mini

[env:esp12]
extends = esp8266
board = esp12e
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=esp12

[env:esp07]
extends = esp8266
board = esp07
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=esp07
board_build.ldscript = eagle.flash.1m64.ld

[env:huzzah]
extends = esp8266
board = huzzah
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=huzzah

[env:d1_mini_pro]
extends = esp8266
board = d1_mini_pro
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=d1_mini_PRO

[env:esp32doit-devkit-v1]
extends = esp32
board = esp32doit-devkit-v1
build_flags = ${base.build_flags} -D FIRMWARE_VARIANT=esp32doit-devkit-v1

[env:debug]
extends = env:d1_mini
; these options cause weird memory-related issues (like "stack smashing detected"), hardware watchdog, etc.
; keeping them here for reference
;monitor_filters = esp8266_exception_decoder
;build_type = debug

[env:ota]
extends = env:debug
upload_port = 10.133.8.221
upload_protocol = custom
upload_command = curl.exe -F "image=@$SOURCE" http://$UPLOAD_PORT/firmware