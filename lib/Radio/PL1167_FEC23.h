#include <Arduino.h>

#ifndef _PL1167_FEC23_H
#define _PL1167_FEC23_H

// encode tables are static to prevent memory consumption 
// on reinitialization by the main class

static const uint16_t encodeTable[0x0400] = {
0x00, 0x35, 0x5f, 0x6a,
0x8b, 0xbe, 0xd4, 0xe1,
0x116, 0x123, 0x149, 0x17c,
0x19d, 0x1a8, 0x1c2, 0x1f7,
0x219, 0x22c, 0x246, 0x273,
0x292, 0x2a7, 0x2cd, 0x2f8,
0x30f, 0x33a, 0x350, 0x365,
0x384, 0x3b1, 0x3db, 0x3ee,
0x407, 0x432, 0x458, 0x46d,
0x48c, 0x4b9, 0x4d3, 0x4e6,
0x511, 0x524, 0x54e, 0x57b,
0x59a, 0x5af, 0x5c5, 0x5f0,
0x61e, 0x62b, 0x641, 0x674,
0x695, 0x6a0, 0x6ca, 0x6ff,
0x708, 0x73d, 0x757, 0x762,
0x783, 0x7b6, 0x7dc, 0x7e9,
0x80e, 0x83b, 0x851, 0x864,
0x885, 0x8b0, 0x8da, 0x8ef,
0x918, 0x92d, 0x947, 0x972,
0x993, 0x9a6, 0x9cc, 0x9f9,
0xa17, 0xa22, 0xa48, 0xa7d,
0xa9c, 0xaa9, 0xac3, 0xaf6,
0xb01, 0xb34, 0xb5e, 0xb6b,
0xb8a, 0xbbf, 0xbd5, 0xbe0,
0xc09, 0xc3c, 0xc56, 0xc63,
0xc82, 0xcb7, 0xcdd, 0xce8,
0xd1f, 0xd2a, 0xd40, 0xd75,
0xd94, 0xda1, 0xdcb, 0xdfe,
0xe10, 0xe25, 0xe4f, 0xe7a,
0xe9b, 0xeae, 0xec4, 0xef1,
0xf06, 0xf33, 0xf59, 0xf6c,
0xf8d, 0xfb8, 0xfd2, 0xfe7,
0x101c, 0x1029, 0x1043, 0x1076,
0x1097, 0x10a2, 0x10c8, 0x10fd,
0x110a, 0x113f, 0x1155, 0x1160,
0x1181, 0x11b4, 0x11de, 0x11eb,
0x1205, 0x1230, 0x125a, 0x126f,
0x128e, 0x12bb, 0x12d1, 0x12e4,
0x1313, 0x1326, 0x134c, 0x1379,
0x1398, 0x13ad, 0x13c7, 0x13f2,
0x141b, 0x142e, 0x1444, 0x1471,
0x1490, 0x14a5, 0x14cf, 0x14fa,
0x150d, 0x1538, 0x1552, 0x1567,
0x1586, 0x15b3, 0x15d9, 0x15ec,
0x1602, 0x1637, 0x165d, 0x1668,
0x1689, 0x16bc, 0x16d6, 0x16e3,
0x1714, 0x1721, 0x174b, 0x177e,
0x179f, 0x17aa, 0x17c0, 0x17f5,
0x1812, 0x1827, 0x184d, 0x1878,
0x1899, 0x18ac, 0x18c6, 0x18f3,
0x1904, 0x1931, 0x195b, 0x196e,
0x198f, 0x19ba, 0x19d0, 0x19e5,
0x1a0b, 0x1a3e, 0x1a54, 0x1a61,
0x1a80, 0x1ab5, 0x1adf, 0x1aea,
0x1b1d, 0x1b28, 0x1b42, 0x1b77,
0x1b96, 0x1ba3, 0x1bc9, 0x1bfc,
0x1c15, 0x1c20, 0x1c4a, 0x1c7f,
0x1c9e, 0x1cab, 0x1cc1, 0x1cf4,
0x1d03, 0x1d36, 0x1d5c, 0x1d69,
0x1d88, 0x1dbd, 0x1dd7, 0x1de2,
0x1e0c, 0x1e39, 0x1e53, 0x1e66,
0x1e87, 0x1eb2, 0x1ed8, 0x1eed,
0x1f1a, 0x1f2f, 0x1f45, 0x1f70,
0x1f91, 0x1fa4, 0x1fce, 0x1ffb,
0x200d, 0x2038, 0x2052, 0x2067,
0x2086, 0x20b3, 0x20d9, 0x20ec,
0x211b, 0x212e, 0x2144, 0x2171,
0x2190, 0x21a5, 0x21cf, 0x21fa,
0x2214, 0x2221, 0x224b, 0x227e,
0x229f, 0x22aa, 0x22c0, 0x22f5,
0x2302, 0x2337, 0x235d, 0x2368,
0x2389, 0x23bc, 0x23d6, 0x23e3,
0x240a, 0x243f, 0x2455, 0x2460,
0x2481, 0x24b4, 0x24de, 0x24eb,
0x251c, 0x2529, 0x2543, 0x2576,
0x2597, 0x25a2, 0x25c8, 0x25fd,
0x2613, 0x2626, 0x264c, 0x2679,
0x2698, 0x26ad, 0x26c7, 0x26f2,
0x2705, 0x2730, 0x275a, 0x276f,
0x278e, 0x27bb, 0x27d1, 0x27e4,
0x2803, 0x2836, 0x285c, 0x2869,
0x2888, 0x28bd, 0x28d7, 0x28e2,
0x2915, 0x2920, 0x294a, 0x297f,
0x299e, 0x29ab, 0x29c1, 0x29f4,
0x2a1a, 0x2a2f, 0x2a45, 0x2a70,
0x2a91, 0x2aa4, 0x2ace, 0x2afb,
0x2b0c, 0x2b39, 0x2b53, 0x2b66,
0x2b87, 0x2bb2, 0x2bd8, 0x2bed,
0x2c04, 0x2c31, 0x2c5b, 0x2c6e,
0x2c8f, 0x2cba, 0x2cd0, 0x2ce5,
0x2d12, 0x2d27, 0x2d4d, 0x2d78,
0x2d99, 0x2dac, 0x2dc6, 0x2df3,
0x2e1d, 0x2e28, 0x2e42, 0x2e77,
0x2e96, 0x2ea3, 0x2ec9, 0x2efc,
0x2f0b, 0x2f3e, 0x2f54, 0x2f61,
0x2f80, 0x2fb5, 0x2fdf, 0x2fea,
0x3011, 0x3024, 0x304e, 0x307b,
0x309a, 0x30af, 0x30c5, 0x30f0,
0x3107, 0x3132, 0x3158, 0x316d,
0x318c, 0x31b9, 0x31d3, 0x31e6,
0x3208, 0x323d, 0x3257, 0x3262,
0x3283, 0x32b6, 0x32dc, 0x32e9,
0x331e, 0x332b, 0x3341, 0x3374,
0x3395, 0x33a0, 0x33ca, 0x33ff,
0x3416, 0x3423, 0x3449, 0x347c,
0x349d, 0x34a8, 0x34c2, 0x34f7,
0x3500, 0x3535, 0x355f, 0x356a,
0x358b, 0x35be, 0x35d4, 0x35e1,
0x360f, 0x363a, 0x3650, 0x3665,
0x3684, 0x36b1, 0x36db, 0x36ee,
0x3719, 0x372c, 0x3746, 0x3773,
0x3792, 0x37a7, 0x37cd, 0x37f8,
0x381f, 0x382a, 0x3840, 0x3875,
0x3894, 0x38a1, 0x38cb, 0x38fe,
0x3909, 0x393c, 0x3956, 0x3963,
0x3982, 0x39b7, 0x39dd, 0x39e8,
0x3a06, 0x3a33, 0x3a59, 0x3a6c,
0x3a8d, 0x3ab8, 0x3ad2, 0x3ae7,
0x3b10, 0x3b25, 0x3b4f, 0x3b7a,
0x3b9b, 0x3bae, 0x3bc4, 0x3bf1,
0x3c18, 0x3c2d, 0x3c47, 0x3c72,
0x3c93, 0x3ca6, 0x3ccc, 0x3cf9,
0x3d0e, 0x3d3b, 0x3d51, 0x3d64,
0x3d85, 0x3db0, 0x3dda, 0x3def,
0x3e01, 0x3e34, 0x3e5e, 0x3e6b,
0x3e8a, 0x3ebf, 0x3ed5, 0x3ee0,
0x3f17, 0x3f22, 0x3f48, 0x3f7d,
0x3f9c, 0x3fa9, 0x3fc3, 0x3ff6,
0x401a, 0x402f, 0x4045, 0x4070,
0x4091, 0x40a4, 0x40ce, 0x40fb,
0x410c, 0x4139, 0x4153, 0x4166,
0x4187, 0x41b2, 0x41d8, 0x41ed,
0x4203, 0x4236, 0x425c, 0x4269,
0x4288, 0x42bd, 0x42d7, 0x42e2,
0x4315, 0x4320, 0x434a, 0x437f,
0x439e, 0x43ab, 0x43c1, 0x43f4,
0x441d, 0x4428, 0x4442, 0x4477,
0x4496, 0x44a3, 0x44c9, 0x44fc,
0x450b, 0x453e, 0x4554, 0x4561,
0x4580, 0x45b5, 0x45df, 0x45ea,
0x4604, 0x4631, 0x465b, 0x466e,
0x468f, 0x46ba, 0x46d0, 0x46e5,
0x4712, 0x4727, 0x474d, 0x4778,
0x4799, 0x47ac, 0x47c6, 0x47f3,
0x4814, 0x4821, 0x484b, 0x487e,
0x489f, 0x48aa, 0x48c0, 0x48f5,
0x4902, 0x4937, 0x495d, 0x4968,
0x4989, 0x49bc, 0x49d6, 0x49e3,
0x4a0d, 0x4a38, 0x4a52, 0x4a67,
0x4a86, 0x4ab3, 0x4ad9, 0x4aec,
0x4b1b, 0x4b2e, 0x4b44, 0x4b71,
0x4b90, 0x4ba5, 0x4bcf, 0x4bfa,
0x4c13, 0x4c26, 0x4c4c, 0x4c79,
0x4c98, 0x4cad, 0x4cc7, 0x4cf2,
0x4d05, 0x4d30, 0x4d5a, 0x4d6f,
0x4d8e, 0x4dbb, 0x4dd1, 0x4de4,
0x4e0a, 0x4e3f, 0x4e55, 0x4e60,
0x4e81, 0x4eb4, 0x4ede, 0x4eeb,
0x4f1c, 0x4f29, 0x4f43, 0x4f76,
0x4f97, 0x4fa2, 0x4fc8, 0x4ffd,
0x5006, 0x5033, 0x5059, 0x506c,
0x508d, 0x50b8, 0x50d2, 0x50e7,
0x5110, 0x5125, 0x514f, 0x517a,
0x519b, 0x51ae, 0x51c4, 0x51f1,
0x521f, 0x522a, 0x5240, 0x5275,
0x5294, 0x52a1, 0x52cb, 0x52fe,
0x5309, 0x533c, 0x5356, 0x5363,
0x5382, 0x53b7, 0x53dd, 0x53e8,
0x5401, 0x5434, 0x545e, 0x546b,
0x548a, 0x54bf, 0x54d5, 0x54e0,
0x5517, 0x5522, 0x5548, 0x557d,
0x559c, 0x55a9, 0x55c3, 0x55f6,
0x5618, 0x562d, 0x5647, 0x5672,
0x5693, 0x56a6, 0x56cc, 0x56f9,
0x570e, 0x573b, 0x5751, 0x5764,
0x5785, 0x57b0, 0x57da, 0x57ef,
0x5808, 0x583d, 0x5857, 0x5862,
0x5883, 0x58b6, 0x58dc, 0x58e9,
0x591e, 0x592b, 0x5941, 0x5974,
0x5995, 0x59a0, 0x59ca, 0x59ff,
0x5a11, 0x5a24, 0x5a4e, 0x5a7b,
0x5a9a, 0x5aaf, 0x5ac5, 0x5af0,
0x5b07, 0x5b32, 0x5b58, 0x5b6d,
0x5b8c, 0x5bb9, 0x5bd3, 0x5be6,
0x5c0f, 0x5c3a, 0x5c50, 0x5c65,
0x5c84, 0x5cb1, 0x5cdb, 0x5cee,
0x5d19, 0x5d2c, 0x5d46, 0x5d73,
0x5d92, 0x5da7, 0x5dcd, 0x5df8,
0x5e16, 0x5e23, 0x5e49, 0x5e7c,
0x5e9d, 0x5ea8, 0x5ec2, 0x5ef7,
0x5f00, 0x5f35, 0x5f5f, 0x5f6a,
0x5f8b, 0x5fbe, 0x5fd4, 0x5fe1,
0x6017, 0x6022, 0x6048, 0x607d,
0x609c, 0x60a9, 0x60c3, 0x60f6,
0x6101, 0x6134, 0x615e, 0x616b,
0x618a, 0x61bf, 0x61d5, 0x61e0,
0x620e, 0x623b, 0x6251, 0x6264,
0x6285, 0x62b0, 0x62da, 0x62ef,
0x6318, 0x632d, 0x6347, 0x6372,
0x6393, 0x63a6, 0x63cc, 0x63f9,
0x6410, 0x6425, 0x644f, 0x647a,
0x649b, 0x64ae, 0x64c4, 0x64f1,
0x6506, 0x6533, 0x6559, 0x656c,
0x658d, 0x65b8, 0x65d2, 0x65e7,
0x6609, 0x663c, 0x6656, 0x6663,
0x6682, 0x66b7, 0x66dd, 0x66e8,
0x671f, 0x672a, 0x6740, 0x6775,
0x6794, 0x67a1, 0x67cb, 0x67fe,
0x6819, 0x682c, 0x6846, 0x6873,
0x6892, 0x68a7, 0x68cd, 0x68f8,
0x690f, 0x693a, 0x6950, 0x6965,
0x6984, 0x69b1, 0x69db, 0x69ee,
0x6a00, 0x6a35, 0x6a5f, 0x6a6a,
0x6a8b, 0x6abe, 0x6ad4, 0x6ae1,
0x6b16, 0x6b23, 0x6b49, 0x6b7c,
0x6b9d, 0x6ba8, 0x6bc2, 0x6bf7,
0x6c1e, 0x6c2b, 0x6c41, 0x6c74,
0x6c95, 0x6ca0, 0x6cca, 0x6cff,
0x6d08, 0x6d3d, 0x6d57, 0x6d62,
0x6d83, 0x6db6, 0x6ddc, 0x6de9,
0x6e07, 0x6e32, 0x6e58, 0x6e6d,
0x6e8c, 0x6eb9, 0x6ed3, 0x6ee6,
0x6f11, 0x6f24, 0x6f4e, 0x6f7b,
0x6f9a, 0x6faf, 0x6fc5, 0x6ff0,
0x700b, 0x703e, 0x7054, 0x7061,
0x7080, 0x70b5, 0x70df, 0x70ea,
0x711d, 0x7128, 0x7142, 0x7177,
0x7196, 0x71a3, 0x71c9, 0x71fc,
0x7212, 0x7227, 0x724d, 0x7278,
0x7299, 0x72ac, 0x72c6, 0x72f3,
0x7304, 0x7331, 0x735b, 0x736e,
0x738f, 0x73ba, 0x73d0, 0x73e5,
0x740c, 0x7439, 0x7453, 0x7466,
0x7487, 0x74b2, 0x74d8, 0x74ed,
0x751a, 0x752f, 0x7545, 0x7570,
0x7591, 0x75a4, 0x75ce, 0x75fb,
0x7615, 0x7620, 0x764a, 0x767f,
0x769e, 0x76ab, 0x76c1, 0x76f4,
0x7703, 0x7736, 0x775c, 0x7769,
0x7788, 0x77bd, 0x77d7, 0x77e2,
0x7805, 0x7830, 0x785a, 0x786f,
0x788e, 0x78bb, 0x78d1, 0x78e4,
0x7913, 0x7926, 0x794c, 0x7979,
0x7998, 0x79ad, 0x79c7, 0x79f2,
0x7a1c, 0x7a29, 0x7a43, 0x7a76,
0x7a97, 0x7aa2, 0x7ac8, 0x7afd,
0x7b0a, 0x7b3f, 0x7b55, 0x7b60,
0x7b81, 0x7bb4, 0x7bde, 0x7beb,
0x7c02, 0x7c37, 0x7c5d, 0x7c68,
0x7c89, 0x7cbc, 0x7cd6, 0x7ce3,
0x7d14, 0x7d21, 0x7d4b, 0x7d7e,
0x7d9f, 0x7daa, 0x7dc0, 0x7df5,
0x7e1b, 0x7e2e, 0x7e44, 0x7e71,
0x7e90, 0x7ea5, 0x7ecf, 0x7efa,
0x7f0d, 0x7f38, 0x7f52, 0x7f67,
0x7f86, 0x7fb3, 0x7fd9
};

static const uint32_t errorTable[32] = {
                                            0x00000000, 0x00000001, 0x00000002, 0x80030000,
                                            0x00000004, 0x80300000, 0x80060006, 0x00000400,
                                            0x00000008, 0x8c000000, 0x80600060, 0x00000080,
                                            0x800c0000, 0x00002000, 0x00000800, 0x83000000,
                                            0x00000010, 0xb0000000, 0x98000000, 0x93008000,
                                            0x80c00000, 0x00000020, 0x00000100, 0xe0000000,
                                            0x80180000, 0x00000200, 0x00004000, 0xc0010000,
                                            0x00001000, 0x81800000, 0x86000000, 0x00000040
                                        };


class PL1167_FEC23 {
    public:
        static const size_t GEN_POLY = 0x6a00;
        static const size_t BIT_MASK = 0x4000;
        static const size_t CODE_MASK = 0x7fff;
        static const size_t DATA_MASK = 0x03ff;
        static const size_t N2D = 0x0400;
        static const size_t DATA_LEN = 10;
        static const size_t ECC_LEN = 5;
        uint16_t code;
        uint32_t syndrome;
        uint32_t status;
        bool burstErrorCorrection = false;
    
        uint32_t getSyndrome();
        uint32_t correct();
        uint32_t encode(uint16_t data);
        uint16_t decode();
        size_t encodeMessage(uint8_t data[], size_t numValues);
        size_t decodeMessage(uint8_t data[], size_t numValues);
    
    private:
                                   
};

#endif
